name: Build and Release Rust Project

on:
  push:
    tags:
      - 'v*'  # 监听符合 v* 格式的标签推送

jobs:
  build:
    name: Build for macOS and Linux
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Add Build Target
        run: rustup target add ${{ matrix.target }}

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: sshm-${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/*  # 仅上传二进制文件

  release:
    name: Create Release
    needs: build  # 等待构建任务完成
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux Binary
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu-binary
          path: binaries/

      - name: Download macOS Binary
        uses: actions/download-artifact@v3
        with:
          name: x86_64-apple-darwin-binary
          path: binaries/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: binaries/*
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}  # 使用 GitHub 默认 Token
