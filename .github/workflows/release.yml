# GitHub Actions工作流配置文件

name: Build and Release

on:
    push:
        tags:
            - 'v*.*.*' # 当推送符合模式v*.*.*的标签时触发工作流
jobs:
    build:
        runs-on: ${{ matrix.os }} # 定义作业运行的操作系统
        strategy:
            matrix:
                os: [ubuntu-latest] # Linux 构建环境
                target: [x86_64-unknown-linux-gnu] # 构建目标
        steps:
            - name: Checkout code
              uses: actions/checkout@v3 # 检出仓库代码

            - name: Set up Rust
              uses: actions-rs/toolchain@v1 # 设置Rust工具链
              with:
                  toolchain: stable # 使用稳定版Rust工具链
                  profile: minimal # 使用最小化配置文件
                  override: true # 覆盖任何现有的Rust工具链设置

            - name: Build project
              run: cargo build --release # 构建项目的发布版本

            - name: Install Dependencies
              run: |
                  rustup target add ${{ matrix.target }}

            - name: Build Project
              run: |
                  cargo build --release --target ${{ matrix.target }}

            - name: Get tag
              id: tag
              uses: dawidd6/action-get-tag@v1
              with:
                  # Optionally strip `v` prefix
                  strip_v: true

            - name: Rename Binary for Linux
              run: mkdir -p binaries && mv target/${{ matrix.target }}/release/sshm binaries/sshm-${{ matrix.target }}-${{ steps.tag.outputs.tag }}

            - name: Upload Linux Binary
              uses: actions/upload-artifact@v4
              with:
                  name: sshm-${{ matrix.target }}-${{ steps.tag.outputs.tag }}
                  path: binaries/sshm-${{ matrix.target }}-${{ steps.tag.outputs.tag }}
                  retention-days: 3

            - name: Download Linux Binary
              uses: actions/download-artifact@v4
              with:
                  name: sshm-${{ matrix.target }}-${{ steps.tag.outputs.tag }}
                  path: binaries/

            # - name: Download macOS Binary
            #   uses: actions/download-artifact@v3
            #   with:
            #     name: sshm-macos
            #     path: binaries/

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  files: binaries/*
              env:
                  GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
